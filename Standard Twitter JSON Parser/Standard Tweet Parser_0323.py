# Author: Zening Duan, SJMC UW-Madison

from pathlib import Path
import time
import csv
import json
import jsonlines
from tqdm import tqdm
import os


keywords = [

'''
type in your filter keywords here in list format, like "mask"
'''
]#filter_keywords

keyphrases = [
'''
type in your filter keyphrases here in list format, like "social distancing"

'''
]#filter_keywords

"""
#Notes
#seed tweet (the seed content, generated by the orginator account, of a retweet/quote/retweet+quote)
#meso tweet(the content generated by a quoter in a retweet & quote)
#ultima tweet (the whole tweet of a tweet/reply/retweet/quote/retweet & quote)
"""

headers = [
    'account_id_str', #ultima account id
    'account_name', #ultima account name
    'account_screen_name', #ultima account screen name
    'account_followers_count',#number of followers the ultima account has
    'account_friends_count', #number of friends the ultima account has
    'account_statuses_count',#number of statuses the ultima account has
    'account_created_at',#ultima account create time
    'account_verified', #verify status of the ultima account
    'account_description', #ultima account description
    'account_url', #URL in the ultima account's profile
    'account_source', #source of the last tweet the ultima account posted
    #Only for retweet&quote, we have meso account information, i.e., the quoter
    'meso_account_id_str', #the quoter account id
    'meso_account_name', #the quoter account name
    'meso_account_screen_name', #the quoter account screen name
    'meso_account_followers_count', #number of followers the quoter account has
    'meso_account_friends_count', #number of friends the quoter account has
    'meso_account_statuses_count', #number of statuses the quoter account has
    'meso_account_created_at', #quoter account create time
    'meso_account_verified', #verify status of the quoter account
    'meso_account_description', #quoter account description
    'meso_account_url', #URL in the quoter account's profile
    'meso_account_source', #source of the last tweet the quoter account posted


    #If retweet, quote, or retweet&quote: we have seed account information, i.e., the originator
    'seed_account_id_str', #the seed account id
    'seed_account_name', #the seed account name
    'seed_account_screen_name', #the seed account screen name
    'seed_account_followers_count', #number of followers the seed account has
    'seed_account_friends_count', #number of friends the seed account has
    'seed_account_statuses_count', #number of statuses the seed account has
    'seed_account_created_at', #seed account create time
    'seed_account_verified', #verify status of the seed account
    'seed_account_description', #seed account description
    'seed_account_url', #URL in the seed account's profile
    'seed_account_source', #source of the last tweet the seed account posted

    'tweet_id_str', #ultima tweet id
    'tweet_created_at',#ultima tweet create time
    'meso_part_created_at', #if retweet&quote: create time of the quote part
    'meso_part_id_str', #if retweet&quote: tweet id of the quote part
    'seed_part_created_at', #if retweet, quote, retweet&quote: create time of the original tweet
    'seed_part_id_str', #if retweet, quote, retweet&quote: tweet id of the original part
    'tweet_full', #ultima tweet full content
    'tweet_favorite_count', #number of favorites the ultima tweet has
    'tweet_retweet_count', #number of retweets the ultima tweet has
    'tweet_quote_count', #number of quotes the ultima tweet has
    'tweet_reply_count', #number of replys the ultima tweet has
    # If retweet, quote, or retweet&quote: we have seed tweet information
    'tweet_seed_favorite_count', #number of favorites the seed tweet has
    'tweet_seed_retweet_count', #number of retweets the seed tweet has
    'tweet_seed_quote_count', #number of quotes the seed tweet has
    'tweet_seed_reply_count', #number of replys the seed tweet has


    'tweet_hashtags', #hashtags in the ultima tweet
    'tweet_urls', #URLs included in the ultima tweet
    'tweet_user_mentions',# mentioned users in the ultima tweet
    'extended_entities', # extended entities in the ultima tweet
    'category', #tweeting category
    #'country', #Carmen Geo, if you applied Carmen package before parsing, same below
    #'state', #Carmen Geo
    #'county', #Carmen Geo
    #'city' #Carmen Geo
]

data_dirs = ['json_files']
log_dir = 'log_files'
csv_dir = 'csv_files'


def main():
    for data_dir in data_dirs:
        with open(data_dir + '_log_' + time.strftime("%Y%m%d_%H%M%S") + '.txt', 'w') as data_log_writer:
            data_log_writer.write("filename,\ttotal_lines,\tvalid_lines,\tmatched_lines\n")
            for data_path in Path(data_dir).iterdir():

                start_time = time.time()
                print("Reading tweets from " + data_path.name + " :")

                total_count, valid_count, matched_count = process_file(data_path)

                data_log_writer.write("{},\t{},\t{},\t{}\n".format(data_path, total_count, valid_count, matched_count))

                print("Done. Time spent ---> {}".format(time.time() - start_time))


def process_file(data_path):

    total_count = 0
    valid_count = 0
    matched_count = 0

    log_path = log_dir + '/' + data_path.with_suffix('.txt').name
    csv_path = csv_dir + '/' + data_path.with_suffix('.csv').name

    with open(log_path, 'w') as log_writer:
        with open(csv_path, 'w') as _csv_writer:

            csv_writer = csv.writer(_csv_writer)
            csv_writer.writerow(headers)

            with open(data_path, encoding='ISO-8859-1') as reader:

                for line in tqdm(reader):

                    _valid_count, _matched_count = process_line(line, csv_writer, log_writer)

                    total_count += 1
                    valid_count += _valid_count
                    matched_count += _matched_count

    return total_count, valid_count, matched_count


def process_line(line, csv_writer, log_writer):

    _count = 0
    _matched_count = 0

    try:
        obj = json.loads(line)
        _count = 1

        if 'lang' in obj and obj['lang'] == 'en':
            if 'retweeted_status' in obj:
                text = 'RT @'+obj['retweeted_status']['user']['screen_name']+':'+obj['retweeted_status']['text']
            else:
                text = obj['text']

            if containsKeywords(text):
                _matched_count = 1

                # find the proper category

                if 'retweeted_status' in obj:
                    if 'quoted_status' in obj:
                        _category = 'retweet&quote'
                    else:
                        _category = 'retweet'

                elif 'quoted_status' in obj:
                    _category = 'quote'

                elif 'in_reply_to_user_id' in  obj and obj['in_reply_to_user_id'] is not None:
                    _category = 'reply'

                else:
                    _category = 'tweeting'

                # get the content according to its category

                try:
                    seed_hashtags = [] #hashtags in the seed tweet (applied to retweet, quote, and retweet&quote)
                    quoted_hashtags = [] #hashtags in the quoted comment (applied to quote, and retweet&quote)
                    seed_user_mentions = [] #mentioned users in the seed tweet (applied to retweet, quote, and retweet&quote)
                    quoted_user_mentions = [] #mentioned users in the quoted comment (applied to quote, and retweet&quote)
                    seed_urls = [] #URLs in the seed tweet (applied to retweet, quote, and retweet&quote),different from seed_media_urls
                    quoted_urls = [] #URLs in the quoted comment (applied to quote, and retweet&quote),different from quoted_media_urls

                    if _category == 'retweet&quote':

                        _tweet_full = 'RT @' + obj['retweeted_status']['user']['screen_name']

                        #Identify Media Info
                        if 'extended_tweet' in obj['retweeted_status']:
                            quoted_media_type = obj['retweeted_status']['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no media'
                            if quoted_media_type == 'photo':
                                quoted_media_urls = [item['media_url'] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no url' #get the media URL
                            elif quoted_media_type == 'video':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no url'
                                quoted_media_duration = [item['video_info']['duration_millis'] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no duration'
                                quoted_media_urls[0]['duration_millis'] = int(quoted_media_duration[0]) #integrate video info with duration
                            elif quoted_media_type == 'animated_gif':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no url'
                            else:
                                quoted_media_urls = 'no url'

                        else:
                            quoted_media_type = obj['retweeted_status']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['retweeted_status'] else 'no media'
                            if quoted_media_type == 'photo':
                                quoted_media_urls = [item['media_url'] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url' #get the media URL
                            elif quoted_media_type == 'video':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url'
                                quoted_media_duration = [item['video_info']['duration_millis'] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no duration'
                                quoted_media_urls[0]['duration_millis'] = int(quoted_media_duration[0]) #integrate video info with duration
                            elif quoted_media_type == 'animated_gif':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url'
                            else:
                                quoted_media_urls = 'no url'

                        if 'extended_tweet' in obj['quoted_status']:
                            seed_media_type = obj['quoted_status']['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities'  in obj['quoted_status']['extended_tweet'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if'extended_entities'  in obj['quoted_status']['extended_tweet']  else 'no url'
                            else:
                                seed_media_urls = 'no url'
                        else:
                            seed_media_type = obj['quoted_status']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['quoted_status'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                            else:
                                seed_media_urls = 'no url'



                        if 'extended_tweet' in obj['retweeted_status']:
                            if 'extended_tweet' in obj['quoted_status']:
                                _tweet_full += ': ' + obj['retweeted_status']['extended_tweet']['full_text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['extended_tweet']['full_text']
                                quoted_hashtags = [item['text'] for item in obj['retweeted_status']['extended_tweet']['entities']['hashtags']] #hashtags in quote comment
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['extended_tweet']['entities']['hashtags']] #hashtags in seed tweet
                                quoted_user_mentions = [item for item in obj['retweeted_status']['extended_tweet']['entities']['user_mentions']] #keep raw format
                                seed_user_mentions = [item for item in obj['quoted_status']['extended_tweet']['entities']['user_mentions']]#keep raw format
                                quoted_urls = [item['url'] for item in obj['retweeted_status']['extended_tweet']['entities']['urls']] #URLs included in the text of quote comment (the default one is the link of original tweet, if more than 1 means additional link exists)
                                seed_urls = [item['url'] for item in obj['quoted_status']['extended_tweet']['entities']['urls']] #URLs included in the text of seed tweet

                            else:
                                _tweet_full += ': ' + obj['retweeted_status']['extended_tweet']['full_text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['text']
                                quoted_hashtags = [item['text'] for item in obj['retweeted_status']['extended_tweet']['entities']['hashtags']]
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['entities']['hashtags']]
                                quoted_user_mentions = [item for item in obj['retweeted_status']['extended_tweet']['entities']['user_mentions']]
                                seed_user_mentions = [item for item in obj['quoted_status']['entities']['user_mentions']]
                                quoted_urls = [item['url'] for item in obj['retweeted_status']['extended_tweet']['entities']['urls']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['entities']['urls']]


                        else:
                            if 'extended_tweet' in obj['quoted_status']:
                                _tweet_full += ': ' + obj['retweeted_status']['text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['extended_tweet']['full_text']
                                quoted_hashtags = [item['text'] for item in obj['retweeted_status']['entities']['hashtags']]
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['extended_tweet']['entities']['hashtags']]
                                quoted_user_mentions = [item for item in obj['retweeted_status']['entities']['user_mentions']]
                                seed_user_mentions = [item for item in obj['quoted_status']['extended_tweet']['entities']['user_mentions']]
                                quoted_urls = [item['url'] for item in obj['retweeted_status']['entities']['urls']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['extended_tweet']['entities']['urls']]


                            else:
                                _tweet_full += ': ' + obj['retweeted_status']['text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['text']
                                quoted_hashtags = [item['text'] for item in obj['retweeted_status']['entities']['hashtags']]
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['entities']['hashtags']]
                                quoted_user_mentions = [item for item in obj['retweeted_status']['entities']['user_mentions']]
                                seed_user_mentions = [item for item in obj['quoted_status']['entities']['user_mentions']]
                                quoted_urls = [item['url'] for item in obj['retweeted_status']['entities']['urls']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['entities']['urls']]


                        _tweet_hashtags = {'seed_hashtags' : seed_hashtags, 'quoted_hashtags' : quoted_hashtags}
                        _tweet_user_mentions = {'seed_user_mentions' : seed_user_mentions, 'quoted_user_mentions' : quoted_user_mentions}
                        _tweet_urls = {'seed_urls' : seed_urls, 'quoted_urls' : quoted_urls}
                        _media_urls = {'seed_media_type' : seed_media_type, 'seed_media_url' : seed_media_urls,'quoted_media_type': quoted_media_type, 'quoted_media_url':quoted_media_urls}

                        _tweet_favorite_count = obj['retweeted_status']['favorite_count'] #favorites of the quote part （the quote part is regarded as a new tweet）
                        _tweet_retweet_count =  obj['retweeted_status']['retweet_count'] #retweets of the quote part （the quote part is regarded as a new tweet）
                        _tweet_quote_count = obj['retweeted_status']['quote_count'] #quotes of the quote part (the quote part is regarded as a new tweet)
                        _tweet_reply_count = obj['retweeted_status']['reply_count'] #replies of the quote part (the quote part is regarded as a new tweet)
                        _seed_tweet_favorite_count = obj['quoted_status']['favorite_count'] #favorites of the seed tweet
                        _seed_tweet_retweet_count = obj['quoted_status']['retweet_count'] #retweets of the seed tweet
                        _seed_tweet_quote_count = obj['quoted_status']['quote_count'] #quotes of the seed tweet
                        _seed_tweet_reply_count = obj['quoted_status']['reply_count'] #replies of the seed tweet

                        _meso_account_id_str = obj['retweeted_status']['user']['id_str']
                        _meso_account_name = obj['retweeted_status']['user']['name']
                        _meso_account_screen_name = obj['retweeted_status']['user']['screen_name']
                        _meso_account_followers_count = obj['retweeted_status']['user']['followers_count']
                        _meso_account_friends_count = obj['retweeted_status']['user']['friends_count']
                        _meso_account_statuses_count = obj['retweeted_status']['user']['statuses_count']
                        _meso_account_created_time = obj['retweeted_status']['user']['created_at']
                        _meso_account_verified = obj['retweeted_status']['user']['verified']
                        _meso_account_description = obj['retweeted_status']['user']['description']
                        _meso_account_url = obj['retweeted_status']['user']['url']
                        _meso_account_source = obj['retweeted_status']['source'].split(">")[1].split("<")[0]
                        _seed_account_id_str = obj['quoted_status']['user']['id_str']
                        _seed_account_name = obj['quoted_status']['user']['name']
                        _seed_account_screen_name = obj['quoted_status']['user']['screen_name']
                        _seed_account_followers_count = obj['quoted_status']['user']['followers_count']
                        _seed_account_friends_count = obj['quoted_status']['user']['friends_count']
                        _seed_account_statuses_count = obj['quoted_status']['user']['statuses_count']
                        _seed_account_created_time = obj['quoted_status']['user']['created_at']
                        _seed_account_verified = obj['quoted_status']['user']['verified']
                        _seed_account_description = obj['quoted_status']['user']['description']
                        _seed_account_url = obj['quoted_status']['user']['url']
                        _seed_account_source = obj['quoted_status']['source'].split(">")[1].split("<")[0]

                        _meso_part_created_at = obj['retweeted_status']['created_at']
                        _meso_part_id_str = obj['retweeted_status']['id_str']
                        _seed_part_created_at = obj['quoted_status']['created_at']
                        _seed_part_id_str = obj['quoted_status']['id_str']



                    if _category == 'retweet':

                        quoted_media_type = 'not applied'
                        quoted_media_urls = 'not applied'

                        if 'extended_tweet' in obj['retweeted_status']:
                            seed_media_type = obj['retweeted_status']['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status']['extended_tweet'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities'  in obj['retweeted_status']['extended_tweet'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_tweet']['extended_entities']['media']] if'extended_entities'  in obj['retweeted_status']['extended_tweet']  else 'no url'
                            else:
                                seed_media_urls = 'no url'

                        else:
                            seed_media_type = obj['retweeted_status']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['retweeted_status'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['retweeted_status']['extended_entities']['media']] if 'extended_entities' in obj['retweeted_status'] else 'no url'
                            else:
                                seed_media_urls = 'no url'


                        if 'extended_tweet' in obj['retweeted_status']:
                            _tweet_hashtags = [item['text'] for item in obj['retweeted_status']['extended_tweet']['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['retweeted_status']['extended_tweet']['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['retweeted_status']['extended_tweet']['entities']['urls']]
                            _tweet_full = 'RT @' + obj['retweeted_status']['user']['screen_name'] + ': ' + obj['retweeted_status']['extended_tweet']['full_text']
                        else:
                            _tweet_hashtags = [item['text'] for item in obj['retweeted_status']['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['retweeted_status']['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['retweeted_status']['entities']['urls']]
                            _tweet_full = 'RT @' + obj['retweeted_status']['user']['screen_name'] + ': ' + obj['retweeted_status']['text']

                        _media_urls = {'seed_media_type' : seed_media_type, 'seed_media_url' : seed_media_urls,'quoted_media_type': quoted_media_type, 'quoted_media_url':quoted_media_urls}

                        _tweet_favorite_count = "None" #retweet itself does not have any like
                        _tweet_retweet_count =  "None" #retweet itself does not have any retweet
                        _tweet_quote_count = "None" #retweet itself does not have any quote
                        _tweet_reply_count = "None" #retweet itself does not have any reply
                        _seed_tweet_favorite_count = obj['retweeted_status']['favorite_count'] #favorites of the seed tweet
                        _seed_tweet_retweet_count = obj['retweeted_status']['retweet_count'] #retweets of the seed tweet
                        _seed_tweet_quote_count = obj['retweeted_status']['quote_count'] #quotes of the seed tweet
                        _seed_tweet_reply_count = obj['retweeted_status']['reply_count'] #replies of the seed tweet

                        _meso_account_id_str = 'not applied'
                        _meso_account_name = 'not applied'
                        _meso_account_screen_name = 'not applied'
                        _meso_account_followers_count = 'not applied'
                        _meso_account_friends_count = 'not applied'
                        _meso_account_statuses_count = 'not applied'
                        _meso_account_created_time = 'not applied'
                        _meso_account_verified = 'not applied'
                        _meso_account_description = 'not applied'
                        _meso_account_url = 'not applied'
                        _meso_account_source = 'not applied'
                        _seed_account_id_str = obj['retweeted_status']['user']['id']
                        _seed_account_name = obj['retweeted_status']['user']['name']
                        _seed_account_screen_name = obj['retweeted_status']['user']['screen_name']
                        _seed_account_followers_count = obj['retweeted_status']['user']['followers_count']
                        _seed_account_friends_count = obj['retweeted_status']['user']['friends_count']
                        _seed_account_statuses_count = obj['retweeted_status']['user']['statuses_count']
                        _seed_account_created_time = obj['retweeted_status']['user']['created_at']
                        _seed_account_verified = obj['retweeted_status']['user']['verified']
                        _seed_account_description = obj['retweeted_status']['user']['description']
                        _seed_account_url = obj['retweeted_status']['user']['url']
                        _seed_account_source = obj['retweeted_status']['source'].split(">")[1].split("<")[0]

                        _meso_part_created_at = 'not applied'
                        _meso_part_id_str = 'not applied'
                        _seed_part_created_at = obj['retweeted_status']['created_at']
                        _seed_part_id_str = obj['retweeted_status']['id_str']



                    if _category == 'quote':
                        #Identify Media Info
                        if 'extended_tweet' in obj:
                            quoted_media_type = obj['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['extended_tweet'] else 'no media'
                            if quoted_media_type == 'photo':
                                quoted_media_urls = [item['media_url'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url' #get the media URL
                            elif quoted_media_type == 'video':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                                quoted_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no duration'
                                quoted_media_urls[0]['duration_millis'] = int(quoted_media_duration[0]) #integrate video info with duration
                            elif quoted_media_type == 'animated_gif':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                            else:
                                quoted_media_urls = 'no url'

                        else:
                            quoted_media_type = obj['extended_entities']['media'][0]['type'] if 'extended_entities' in obj else 'no media'
                            if quoted_media_type == 'photo':
                                quoted_media_urls = [item['media_url'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url' #get the media URL
                            elif quoted_media_type == 'video':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                                quoted_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no duration'
                                quoted_media_urls[0]['duration_millis'] = int(quoted_media_duration[0]) #integrate video info with duration
                            elif quoted_media_type == 'animated_gif':
                                quoted_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                            else:
                                quoted_media_urls = 'no url'


                        if 'extended_tweet' in obj['quoted_status']:
                            seed_media_type = obj['quoted_status']['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status']['extended_tweet'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if 'extended_entities'  in obj['quoted_status']['extended_tweet'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_tweet']['extended_entities']['media']] if'extended_entities' in obj['quoted_status']['extended_tweet']  else 'no url'
                            else:
                                seed_media_urls = 'no url'


                        else:
                            seed_media_type = obj['quoted_status']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['quoted_status'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['quoted_status']['extended_entities']['media']] if 'extended_entities' in obj['quoted_status'] else 'no url'
                            else:
                                seed_media_urls = 'no url'



                        if 'extended_tweet' in obj['quoted_status']:
                            if 'extended_tweet' in obj:
                                _tweet_full = obj['extended_tweet']['full_text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['extended_tweet']['full_text']
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['extended_tweet']['entities']['hashtags']]
                                quoted_hashtags = [item['text'] for item in obj['extended_tweet']['entities']['hashtags']]
                                seed_user_mentions = [item for item in obj['quoted_status']['extended_tweet']['entities']['user_mentions']]
                                quoted_user_mentions = [item for item in obj['extended_tweet']['entities']['user_mentions']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['extended_tweet']['entities']['urls']]
                                quoted_urls = [item['url'] for item in obj['extended_tweet']['entities']['urls']]
                            else:
                                _tweet_full = obj['text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['extended_tweet']['full_text']
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['extended_tweet']['entities']['hashtags']]
                                quoted_hashtags = [item['text'] for item in obj['entities']['hashtags']]
                                seed_user_mentions = [item for item in obj['quoted_status']['extended_tweet']['entities']['user_mentions']]
                                quoted_user_mentions = [item for item in obj['entities']['user_mentions']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['extended_tweet']['entities']['urls']]
                                quoted_urls = [item['url'] for item in obj['entities']['urls']]
                        else:
                            if 'extended_tweet' in obj:
                                _tweet_full = obj['extended_tweet']['full_text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['text']
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['entities']['hashtags']]
                                quoted_hashtags = [item['text'] for item in obj['extended_tweet']['entities']['hashtags']]
                                seed_user_mentions = [item for item in obj['quoted_status']['entities']['user_mentions']]
                                quoted_user_mentions = [item for item in obj['extended_tweet']['entities']['user_mentions']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['entities']['urls']]
                                quoted_urls = [item['url'] for item in obj['extended_tweet']['entities']['urls']]
                            else:
                                _tweet_full = obj['text'] + ' RT @' + obj['quoted_status']['user']['screen_name'] + ': ' + obj['quoted_status']['text']
                                seed_hashtags = [item['text'] for item in obj['quoted_status']['entities']['hashtags']]
                                quoted_hashtags = [item['text'] for item in obj['entities']['hashtags']]
                                seed_user_mentions = [item for item in obj['quoted_status']['entities']['user_mentions']]
                                quoted_user_mentions = [item for item in obj['entities']['user_mentions']]
                                seed_urls = [item['url'] for item in obj['quoted_status']['entities']['urls']]
                                quoted_urls = [item['url'] for item in obj['entities']['urls']]


                        _tweet_hashtags = {'seed_hashtags' : seed_hashtags, 'quoted_hashtags' : quoted_hashtags}
                        _tweet_user_mentions = {'seed_user_mentions' : seed_user_mentions, 'quoted_user_mentions' : quoted_user_mentions}
                        _tweet_urls = {'seed_urls' : seed_urls, 'quoted_urls' : quoted_urls}
                        _media_urls = {'seed_media_type' : seed_media_type, 'seed_media_url' : seed_media_urls,'quoted_media_type': quoted_media_type, 'quoted_media_url':quoted_media_urls}

                        _tweet_favorite_count = obj['favorite_count'] #favorites of the quote part
                        _tweet_retweet_count =  obj['retweet_count'] #retweets of the quote part
                        _tweet_quote_count = obj['quote_count'] #quotes of the quote part
                        _tweet_reply_count = obj['reply_count'] #replies of the quote part
                        _seed_tweet_favorite_count = obj['quoted_status']['favorite_count'] #favorites of the seed tweet
                        _seed_tweet_retweet_count = obj['quoted_status']['retweet_count'] #retweets of the seed tweet
                        _seed_tweet_quote_count = obj['quoted_status']['quote_count'] #quotes of the seed tweet
                        _seed_tweet_reply_count = obj['quoted_status']['reply_count'] #replies of the seed tweet

                        _meso_account_id_str = 'not applied'
                        _meso_account_name = 'not applied'
                        _meso_account_screen_name = 'not applied'
                        _meso_account_followers_count = 'not applied'
                        _meso_account_friends_count = 'not applied'
                        _meso_account_statuses_count = 'not applied'
                        _meso_account_created_time = 'not applied'
                        _meso_account_verified = 'not applied'
                        _meso_account_description = 'not applied'
                        _meso_account_url = 'not applied'
                        _meso_account_source = 'not applied'
                        _seed_account_id_str = obj['quoted_status']['user']['id']
                        _seed_account_name = obj['quoted_status']['user']['name']
                        _seed_account_screen_name = obj['quoted_status']['user']['screen_name']
                        _seed_account_followers_count = obj['quoted_status']['user']['followers_count']
                        _seed_account_friends_count = obj['quoted_status']['user']['friends_count']
                        _seed_account_statuses_count = obj['quoted_status']['user']['statuses_count']
                        _seed_account_created_time = obj['quoted_status']['user']['created_at']
                        _seed_account_verified = obj['quoted_status']['user']['verified']
                        _seed_account_description = obj['quoted_status']['user']['description']
                        _seed_account_url = obj['quoted_status']['user']['url']
                        _seed_account_source = obj['quoted_status']['source'].split(">")[1].split("<")[0]

                        _meso_part_created_at = 'not applied'
                        _meso_part_id_str = 'not applied'
                        _seed_part_created_at = obj['quoted_status']['created_at']
                        _seed_part_id_str = obj['quoted_status']['id_str']



                    if _category == 'reply':

                        quoted_media_type = 'not applied'
                        quoted_media_urls = 'not applied'

                        if 'extended_tweet' in obj:
                            seed_media_type = obj['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['extended_tweet'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities'  in obj['extended_tweet'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if'extended_entities' in obj['extended_tweet']  else 'no url'
                            else:
                                seed_media_urls = 'no url'

                        else:
                            seed_media_type = obj['extended_entities']['media'][0]['type'] if 'extended_entities' in obj else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                            else:
                                seed_media_urls = 'no url'



                        if 'extended_tweet' in obj:
                            _tweet_full = 'Replying to ' + obj['extended_tweet']['full_text']
                            _tweet_hashtags = [item['text'] for item in obj['extended_tweet']['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['extended_tweet']['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['extended_tweet']['entities']['urls']]
                        else:
                            _tweet_full = 'Replying to ' + obj['text']
                            _tweet_hashtags = [item['text'] for item in obj['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['entities']['urls']]


                        _media_urls = {'seed_media_type' : seed_media_type, 'seed_media_url' : seed_media_urls,'quoted_media_type': quoted_media_type, 'quoted_media_url':quoted_media_urls}

                        _tweet_favorite_count = obj['favorite_count']#reply as a new tweet
                        _tweet_retweet_count = obj['retweet_count'] #reply as a new tweet
                        _tweet_quote_count = obj['quote_count'] #reply as a new tweet
                        _tweet_reply_count = obj['reply_count'] #reply as a new tweet
                        _seed_tweet_favorite_count = 'not applied'
                        _seed_tweet_retweet_count =  'not applied'
                        _seed_tweet_quote_count = 'not applied'
                        _seed_tweet_reply_count = 'not applied'


                        _meso_account_id_str = 'not applied'
                        _meso_account_name = 'not applied'
                        _meso_account_screen_name = 'not applied'
                        _meso_account_followers_count = 'not applied'
                        _meso_account_friends_count = 'not applied'
                        _meso_account_statuses_count = 'not applied'
                        _meso_account_created_time = 'not applied'
                        _meso_account_verified = 'not applied'
                        _meso_account_description = 'not applied'
                        _meso_account_url = 'not applied'
                        _meso_account_source = 'not applied'
                        _seed_account_id_str = 'not applied'
                        _seed_account_name = 'not applied'
                        _seed_account_screen_name = 'not applied'
                        _seed_account_followers_count = 'not applied'
                        _seed_account_friends_count = 'not applied'
                        _seed_account_statuses_count = 'not applied'
                        _seed_account_created_time = 'not applied'
                        _seed_account_verified = 'not applied'
                        _seed_account_description = 'not applied'
                        _seed_account_url = 'not applied'
                        _seed_account_source = 'not applied'

                        _meso_part_created_at = 'not applied'
                        _meso_part_id_str = 'not applied'
                        _seed_part_created_at = 'not applied'
                        _seed_part_id_str = 'not applied'




                    if _category == 'tweeting':

                        quoted_media_type = 'not applied'
                        quoted_media_urls = 'not applied'

                        if 'extended_tweet' in obj:
                            seed_media_type = obj['extended_tweet']['extended_entities']['media'][0]['type'] if 'extended_entities' in obj['extended_tweet'] else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities' in obj['extended_tweet'] else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_tweet']['extended_entities']['media']] if 'extended_entities'  in obj['extended_tweet'] else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_tweet']['extended_entities']['media']] if'extended_entities'  in obj['extended_tweet']  else 'no url'
                            else:
                                seed_media_urls = 'no url'

                        else:
                            seed_media_type = obj['extended_entities']['media'][0]['type'] if 'extended_entities' in obj else 'no media' #same
                            if seed_media_type == 'photo':
                                seed_media_urls = [item['media_url'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                            elif seed_media_type == 'video':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                                seed_media_duration = [item['video_info']['duration_millis'] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no duration'
                                seed_media_urls[0]['duration_millis'] = int(seed_media_duration[0]) #integrate video info with duration
                            elif seed_media_type == 'animated_gif':
                                seed_media_urls = [item['video_info']['variants'][-1] for item in obj['extended_entities']['media']] if 'extended_entities' in obj else 'no url'
                            else:
                                seed_media_urls = 'no url'



                        if 'extended_tweet' in obj:
                            _tweet_full = obj['extended_tweet']['full_text']
                            _tweet_hashtags = [item['text'] for item in obj['extended_tweet']['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['extended_tweet']['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['extended_tweet']['entities']['urls']]
                        else:
                            _tweet_full = obj['text']
                            _tweet_hashtags = [item['text'] for item in obj['entities']['hashtags']]
                            _tweet_user_mentions = [item for item in obj['entities']['user_mentions']]
                            _tweet_urls = [item['url'] for item in obj['entities']['urls']]

                        _media_urls = {'seed_media_type' : seed_media_type, 'seed_media_url' : seed_media_urls,'quoted_media_type': quoted_media_type, 'quoted_media_url':quoted_media_urls}

                        _tweet_favorite_count = obj['favorite_count']
                        _tweet_retweet_count =  obj['retweet_count']
                        _tweet_quote_count = obj['quote_count']
                        _tweet_reply_count = obj['reply_count']
                        _seed_tweet_favorite_count = 'not applied'
                        _seed_tweet_retweet_count = 'not applied'
                        _seed_tweet_quote_count = 'not applied'
                        _seed_tweet_reply_count = 'not applied'


                        _meso_account_id_str = 'not applied'
                        _meso_account_name = 'not applied'
                        _meso_account_screen_name = 'not applied'
                        _meso_account_followers_count = 'not applied'
                        _meso_account_friends_count = 'not applied'
                        _meso_account_statuses_count = 'not applied'
                        _meso_account_created_time = 'not applied'
                        _meso_account_verified = 'not applied'
                        _meso_account_description = 'not applied'
                        _meso_account_url = 'not applied'
                        _meso_account_source = 'not applied'
                        _seed_account_id_str = 'not applied'
                        _seed_account_name = 'not applied'
                        _seed_account_screen_name = 'not applied'
                        _seed_account_followers_count = 'not applied'
                        _seed_account_friends_count = 'not applied'
                        _seed_account_statuses_count = 'not applied'
                        _seed_account_created_time = 'not applied'
                        _seed_account_verified = 'not applied'
                        _seed_account_description = 'not applied'
                        _seed_account_url = 'not applied'
                        _seed_account_source = 'not applied'

                        _meso_part_created_at = 'not applied'
                        _meso_part_id_str = 'not applied'
                        _seed_part_created_at = 'not applied'
                        _seed_part_id_str = 'not applied'

                    _country =''
                    _state = ''
                    _county = ''
                    _city = ''


                    if 'location' in obj:

                        if 'country' in obj['location']:
                            _country += obj['location']['country']

                        if 'state' in obj['location']:
                            _state += obj['location']['state']

                        if 'county' in obj['location']:
                            _county += obj['location']['county']

                        if 'city' in obj['location']:
                            _city += obj['location']['city']



                    row_content = [
                        obj['user']['id_str'], #'account_id_str'
                        obj['user']['name'], #'account_name'
                        obj['user']['screen_name'], #'account_screen_name'
                        obj['user']['followers_count'], #'account_followers_count'
                        obj['user']['friends_count'], #'account_friends_count'
                        obj['user']['statuses_count'], #'account_statuses_count'
                        obj['user']['created_at'], #'account_created_at'
                        obj['user']['verified'], #'account_verified'
                        obj['user']['description'], #'account_description'
                        obj['user']['url'], #'account_url'
                        obj['source'].split(">")[1].split("<")[0], #'account_source'

                        _meso_account_id_str, #'meso_account_id_str'
                        _meso_account_name, #'meso_account_name'
                        _meso_account_screen_name, #'meso_account_screen_name'
                        _meso_account_followers_count,  #'meso_account_followers_count'
                        _meso_account_friends_count, #'meso_account_friends_count'
                        _meso_account_statuses_count, #'meso_account_statuses_count'
                        _meso_account_created_time, #'meso_account_created_at'
                        _meso_account_verified, #'meso_account_verified'
                        _meso_account_description, #'meso_account_description'
                        _meso_account_url, #'meso_account_url'
                        _meso_account_source, #'meso_account_source'

                        _seed_account_id_str, #'seed_account_id_str'
                        _seed_account_name, #'seed_account_name'
                        _seed_account_screen_name, #'seed_account_screen_name'
                        _seed_account_followers_count,  #'seed_account_followers_count'
                        _seed_account_friends_count, #'seed_account_friends_count'
                        _seed_account_statuses_count, #'seed_account_statuses_count'
                        _seed_account_created_time, #'seed_account_created_at'
                        _seed_account_verified, #'seed_account_verified'
                        _seed_account_description, #'seed_account_description'
                        _seed_account_url, #'seed_account_url'
                        _seed_account_source, #'seed_account_source'

                        obj['id_str'], #'tweet_id_str'
                        obj['created_at'], #'tweet_created_at'
                        _meso_part_created_at, #'meso_part_created_at'
                        _meso_part_id_str, #'meso_part_id_str'
                        _seed_part_created_at, #'seed_part_created_at'
                        _seed_part_id_str, #'seed_part_id_str'
                        _tweet_full, #'tweet_full'
                        _tweet_favorite_count, #'tweet_favorite_count'
                        _tweet_retweet_count, #'tweet_retweet_count'
                        _tweet_quote_count, #'tweet_quote_count'
                        _tweet_reply_count,#'tweet_reply_count'
                        _seed_tweet_favorite_count, #'tweet_seed_favorite_count'
                        _seed_tweet_retweet_count, #'tweet_seed_retweet_count'
                        _seed_tweet_quote_count, #'tweet_seed_quote_count'
                        _seed_tweet_reply_count, #'tweet_seed_reply_count'
                        _tweet_hashtags, #'tweet_hashtags'
                        _tweet_urls, #'tweet_urls'
                        _tweet_user_mentions, #'tweet_user_mentions'
                        _media_urls, #'extended_entities'
                        _category, #'category'
                        #_country, #Carmen Geo, if you applied Carmen package before parsing, same below
                        #_state, #Carmen Geo
                        #_county, #Carmen Geo
                        #_city #Carmen Geo
                    ]

                    csv_writer.writerow(row_content)

                except:
                    log_writer.write(line)

    except ValueError as e:
        pass

    return _count, _matched_count


def containsKeywords(text):
    global keywords, keyphrases

    search = text.lower().split()
    for word in keywords:
        if word in search:
            return True
    for phrase in keyphrases:
        if phrase in text.lower():
            return True
    return False


if __name__ == "__main__":
    main()
